{"version":3,"sources":["Searchbar/Searchbar.js","ImageGallery/ImageGalleryItem/ImageGalleryItem.js","ImageGallery/Button/Button.js","ImageGallery/ImageGallery.js","Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","imageName","handleChange","currentTarget","setState","value","handleSubmit","evt","preventDefault","trim","props","onSubmit","className","this","type","placeholder","onChange","Component","ImageGalleryItem","webformatURL","largeImageURL","src","alt","Button","loadMore","onClick","ImageGallery","images","loading","error","page","prev","getData","imgName","console","log","axios","get","then","resp","data","hits","window","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","finally","prevProps","prevState","openModal","message","SpinnerDotted","map","image","id","Modal","onHandleEscapeClick","e","code","toggleModal","onOverlayClick","target","addEventListener","removeEventListener","lagreImgURL","App","isOpenModal","formSubmit","tagName","dataset","large","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.09155378.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    imageName: '',\r\n  };\r\n\r\n  handleChange = ({ currentTarget }) => {\r\n    this.setState({ imageName: currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    if (this.state.imageName.trim() === '') {\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.imageName);\r\n    this.setState({ imageName: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.imageName}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\n\r\nfunction ImageGalleryItem({ webformatURL, largeImageURL }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={webformatURL}\r\n        data-large={largeImageURL}\r\n        alt=\"\"\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\n\r\nconst Button = ({ loadMore }) => {\r\n  return (\r\n    <div className=\"buttonContainer\">\r\n      <button type=\"button\" onClick={loadMore} className=\"Button\">\r\n        Load More\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\r\nimport Button from './Button/Button';\r\nimport { SpinnerDotted } from 'spinners-react';\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    images: null,\r\n    loading: false,\r\n    error: null,\r\n    page: 1,\r\n  };\r\n\r\n  loadMore = () => {\r\n    this.setState(prev => ({ page: prev.page + 1 }));\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // if (\r\n    //   prevState.page !== this.state.page ||\r\n    //   prevProps.imageName !== this.props.imageName\r\n    // ) {\r\n    //   if (prevProps.imageName !== this.props.imageName) {\r\n    //     this.setState({ images: null, page: 1 });\r\n    //   }\r\n\r\n    //   this.getData(this.state.page, this.props.imageName);\r\n    // }\r\n\r\n    // if (\r\n    //   prevState.page !== this.state.page ||\r\n    //   prevProps.imageName !== this.props.imageName\r\n    // ) {\r\n    //   if (prevProps.imageName !== this.props.imageName) {\r\n    //     this.setState({ images: null, page: 1 });\r\n    //   }\r\n\r\n    //   this.getData(this.props.imageName, this.state.page);\r\n    // }\r\n\r\n    if (prevState.page !== this.state.page) {\r\n      this.getData(this.props.imageName, this.state.page);\r\n    }\r\n    if (prevProps.imageName !== this.props.imageName) {\r\n      this.setState({ images: null, page: 1 });\r\n      this.getData(this.props.imageName, this.state.page);\r\n    }\r\n  }\r\n\r\n  getData = (imgName, page) => {\r\n    this.setState({ loading: true });\r\n    console.log(page);\r\n\r\n    axios\r\n      .get(\r\n        `https://pixabay.com/api/?q=${imgName}&page=${page}&key=23115860-3b173cd8cbd28dc69cb35b572&image_type=photo&orientation=horizontal&per_page=12`,\r\n      )\r\n      .then(resp => {\r\n        this.setState(prev => ({\r\n          images:\r\n            prev.page === 1\r\n              ? resp.data.hits\r\n              : [...prev.images, ...resp.data.hits],\r\n        }));\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(this.setState({ loading: false }));\r\n  };\r\n\r\n  render() {\r\n    const { images, loading, error } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <ul className=\"ImageGallery\" onClick={this.props.openModal}>\r\n          {error && <h1>{error.message}</h1>}\r\n          {loading && <SpinnerDotted />}\r\n          {images &&\r\n            images.map(image => {\r\n              return (\r\n                <ImageGalleryItem\r\n                  key={image.id}\r\n                  webformatURL={image.webformatURL}\r\n                  largeImageURL={image.largeImageURL}\r\n                />\r\n              );\r\n            })}\r\n        </ul>\r\n        {images && <Button className=\"Button\" loadMore={this.loadMore} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\r\n\r\nclass Modal extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.onHandleEscapeClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.onHandleEscapeClick);\r\n  }\r\n\r\n  onHandleEscapeClick = e => e.code === 'Escape' && this.props.toggleModal();\r\n\r\n  onOverlayClick = e => {\r\n    if (e.target === e.currentTarget) this.props.toggleModal();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.onOverlayClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.lagreImgURL} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport Searchbar from './Searchbar/Searchbar';\r\nimport ImageGallery from './ImageGallery/ImageGallery';\r\nimport Modal from './Modal/Modal';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    imageName: '',\r\n    isOpenModal: false,\r\n    lagreImgURL: '',\r\n  };\r\n  formSubmit = imageName => {\r\n    this.setState({ imageName });\r\n  };\r\n  openModal = e => {\r\n    if (e.target.tagName === 'IMG') {\r\n      this.setState({ isOpenModal: true });\r\n      this.setState({ lagreImgURL: e.target.dataset.large });\r\n    }\r\n  };\r\n  toggleModal = () =>\r\n    this.setState(prev => ({ isOpenModal: !prev.isOpenModal }));\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.formSubmit} />\r\n        <ImageGallery\r\n          imageName={this.state.imageName}\r\n          openModal={this.openModal}\r\n        />\r\n        {this.state.isOpenModal && (\r\n          <Modal\r\n            lagreImgURL={this.state.lagreImgURL}\r\n            openModal={this.openModal}\r\n            toggleModal={this.toggleModal}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}